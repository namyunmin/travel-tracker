name: Deploy Travel Tracker to EC2

on:
  push:
    branches: [ "main", "master" ]
  pull_request:
    branches: [ "main", "master" ]
  workflow_dispatch:

permissions:
  contents: read

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
        
    - name: Deploy to EC2
      uses: appleboy/ssh-action@v0.1.6
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USER }}
        key: ${{ secrets.EC2_KEY }}
        script: |
          cd /home/ubuntu
          
          # 기존 서버 프로세스 종료
          sudo pkill -f "python.*run" || true
          sudo pkill -f "python.*main" || true
          
          # 기존 백업
          if [ -d "travel-tracker" ]; then
            mv travel-tracker travel-tracker_backup_$(date +%Y%m%d_%H%M%S)
          fi
          
          # 최신 코드 클론
          git clone https://github.com/namyunmin/travel-tracker.git
          cd travel-tracker
          
          # Python 환경 설정
          python3 -m venv venv
          source venv/bin/activate
          pip install --upgrade pip
          pip install -r requirements.txt
          pip install pyOpenSSL
          
          # HTTPS 서버 실행 스크립트 생성
          cat > run_https.py << 'EOF'
          #!/usr/bin/env python3
          import os
          import sys
          
          current_dir = os.path.dirname(os.path.abspath(__file__))
          sys.path.insert(0, current_dir)
          backend_dir = os.path.join(current_dir, 'backend')
          sys.path.insert(0, backend_dir)
          
          if __name__ == '__main__':
              from backend.app import app, init_db
              init_db()
              print("🔐 HTTPS Travel Tracker 시작...")
              print("📍 접속: https://16.171.133.35:5000")
              app.run(debug=False, host='0.0.0.0', port=5000, ssl_context='adhoc')
          EOF
          
          chmod +x run_https.py
          
          # HTTPS 서버 백그라운드 실행
          nohup python run_https.py > app.log 2>&1 &
          
          echo "✅ Travel Tracker HTTPS 배포 완료!"
          
          # 배포 확인
          sleep 10
          if pgrep -f "python.*run_https" > /dev/null; then
            echo "✅ 서버가 정상적으로 실행 중입니다."
            echo "📍 https://16.171.133.35:5000 에서 확인하세요"
          else
            echo "❌ 서버 실행 실패"
            echo "로그 내용:"
            tail -20 app.log
          fi
