name: 자동 배포

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Python 3.11 설정
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: 의존성 설치
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: 테스트 실행
      run: |
        # 테스트 디렉토리가 있으면 테스트 실행
        if [ -d "tests" ]; then
          python -m pytest tests/ -v
        else
          echo "테스트 디렉토리가 없습니다. 테스트를 건너뜁니다."
        fi
        
  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v3
    
    - name: EC2에 배포
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USERNAME }}
        key: ${{ secrets.EC2_SSH_KEY }}
        port: 22
        timeout: 300s
        debug: true
        script: |
          echo "🔗 SSH 연결 성공!"
          echo "현재 사용자: $(whoami)"
          echo "홈 디렉토리: $(pwd)"
          echo "서버 정보: $(uname -a)"
          
          # 프로젝트 디렉토리 확인/생성
          if [ ! -d "/home/ubuntu/my_web_app" ]; then
            echo "📂 프로젝트 디렉토리가 없습니다. 생성 중..."
            mkdir -p /home/ubuntu/my_web_app
            cd /home/ubuntu/my_web_app
            git clone https://github.com/namyunmin/travel-tracker.git .
          else
            cd /home/ubuntu/my_web_app
          fi
          
          echo "📁 현재 디렉토리: $(pwd)"
          echo "📄 파일 목록:"
          ls -la
          
          # Git 설정 및 pull
          git config --global --add safe.directory /home/ubuntu/my_web_app
          git fetch origin
          git reset --hard origin/main
          
          # Python 환경 확인
          echo "🐍 Python 버전 확인:"
          python3 --version
          
          # 필수 패키지 설치
          sudo apt update
          sudo apt install -y python3-pip python3-venv
          
          # 기존 프로세스 중지
          echo "🛑 기존 프로세스 중지 중..."
          sudo pkill -f "python.*main.py" || true
          sudo pkill -f "gunicorn.*main:app" || true
          sleep 2
          
          # 가상환경 생성 및 활성화
          echo "🔧 가상환경 설정 중..."
          python3 -m venv venv
          source venv/bin/activate
          
          # 의존성 설치
          echo "📦 의존성 설치 중..."
          pip install --upgrade pip
          pip install -r requirements.txt
          
          # 프로덕션 서버 시작
          echo "🚀 서버 시작 중..."
          nohup python3 main.py > app.log 2>&1 &
          
          # 서버 시작 확인
          sleep 5
          if pgrep -f "python.*main.py" > /dev/null; then
            echo "✅ 서버가 성공적으로 시작되었습니다."
            curl -f http://localhost:5000/health || echo "❌ 헬스체크 실패"
          else
            echo "❌ 서버 시작 실패"
            tail -10 app.log
            exit 1
          fi
    
    - name: 배포 결과 확인
      env:
        HOST: ${{ secrets.EC2_HOST }}
      run: |
        echo "배포가 완료되었습니다!"
        echo "애플리케이션 URL: http://$HOST:5000"
        echo "헬스 체크: http://$HOST:5000/health"