name: 자동 배포

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Python 3.11 설정
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: 의존성 설치
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: 테스트 실행
      run: |
        # 테스트 디렉토리가 있으면 테스트 실행
        if [ -d "tests" ]; then
          python -m pytest tests/ -v
        else
          echo "테스트 디렉토리가 없습니다. 테스트를 건너뜁니다."
        fi
        
  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v3
    
    - name: EC2에 배포
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USERNAME }}
        key: ${{ secrets.EC2_SSH_KEY }}
        port: 22
        timeout: 600s
        debug: false
        script: |
          echo "🚀 배포 시작: $(date)"
          
          cd /home/ubuntu/my_web_app || { mkdir -p /home/ubuntu/my_web_app && cd /home/ubuntu/my_web_app && git clone https://github.com/namyunmin/travel-tracker.git .; }
          
          # 코드 업데이트
          git config --global --add safe.directory /home/ubuntu/my_web_app
          git fetch origin && git reset --hard origin/main
          
          # 기존 프로세스 중지
          sudo pkill -f "python.*main.py" || true
          sudo pkill -f "gunicorn" || true
          sleep 3
          
          # 가상환경 및 의존성
          python3 -m venv venv --clear
          source venv/bin/activate
          pip install --upgrade pip -q
          pip install -r requirements.txt -q
          
          # 서버 시작
          nohup python3 main.py > /dev/null 2>&1 &
          
          # 배포 완료 확인
          sleep 5
          if curl -s http://localhost:5000/api/get-markers > /dev/null; then
            echo "✅ 배포 성공: $(date)"
          else
            echo "❌ 배포 실패"
            exit 1
          fi
    
    - name: 배포 결과 확인
      env:
        HOST: ${{ secrets.EC2_HOST }}
      run: |
        echo "배포가 완료되었습니다!"
        echo "애플리케이션 URL: http://$HOST:5000"
        echo "헬스 체크: http://$HOST:5000/health"